
;//------------------- TEST-CASE -----------------

// ========== distributed cache =========

// data
['I love java', 'you love java ma'] -> write(hdfs('foo'));

;//--------------------- RESULT ------------------

{
  "location": "foo",
  "type": "hdfs"
}

;//------------------- TEST-CASE -----------------


// copy the local file to HDFS
hdfsShell("-copyFromLocal " + DATADIR + "Echo.class Echo.class");

;//--------------------- RESULT ------------------

-1

;//------------------- TEST-CASE -----------------


// set hadoop properties
setOptions({conf:{"mapred.cache.files": HDFS_URL + WORK_DIR + "/Echo.class#Echo.class"}});

;//--------------------- RESULT ------------------

true

;//------------------- TEST-CASE -----------------




// run a local java class

// data
$args = ['hello', 'world'];
;//------------------- TEST-CASE -----------------


// in streaming mode
// should return empty value in no_rewrite
echo = externalfn ( { cmd: 'java -classpath ./taskTracker/archive/' + HDFS_NAMENODE + WORK_DIR  + '/Echo.class Echo', perPartition: false, mode: 'streaming'} );
;//------------------- TEST-CASE -----------------


// invoke
read(hdfs('foo')) -> transform({k:$, pamameters: echo($args)});

;//--------------------- RESULT ------------------

[
  {
    "k": "I love java",
    "pamameters": [
      "hello",
      "world"
    ]
  },
  {
    "k": "you love java ma",
    "pamameters": [
      "hello",
      "world"
    ]
  }
]

;//------------------- TEST-CASE -----------------



// in push mode
// should return empty value in no_rewrite
echo = externalfn ( { cmd: 'java -classpath ./taskTracker/archive/' + HDFS_NAMENODE + WORK_DIR  + '/Echo.class Echo', perPartition: true, mode:'push'} );
;//------------------- TEST-CASE -----------------


// invoke
echo($args) -> transform {parameters:$};

;//--------------------- RESULT ------------------

[
  {
    "parameters": "hello world"
  }
]

;//------------------- TEST-CASE -----------------



;//------------------- TEST-DONE -----------------
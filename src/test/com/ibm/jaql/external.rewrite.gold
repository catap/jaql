
;//------------------- TEST-CASE -----------------

// ========== streaming mode =========
// data
['I love java', 'you love java ma'] -> write(hdfs('foo'));

;//--------------------- RESULT ------------------

{
  "location": "foo",
  "type": "hdfs"
}

;//------------------- TEST-CASE -----------------


// define an external call
external = externalfn({ cmd:'grep ma', perPartition:true, mode:'streaming' });
;//------------------- TEST-CASE -----------------


// verified
read(hdfs('foo'));

;//--------------------- RESULT ------------------

[
  "I love java",
  "you love java ma"
]

;//------------------- TEST-CASE -----------------


// invoke the call and run in parallel
read(hdfs('foo')) -> external();

;//--------------------- RESULT ------------------

[
  "you love java ma"
]

;//------------------- TEST-CASE -----------------


// should be run in parallel
read(hdfs('foo')) -> perPartition(->external());

;//--------------------- RESULT ------------------

[
  "you love java ma"
]

;//------------------- TEST-CASE -----------------




// =========== push mode ===========
// data
data = ['I love java', 'you love java ma'];
;//------------------- TEST-CASE -----------------


// re-define an external call
external = externalfn({cmd:'grep ma', perPartition:false, mode:'push' });
;//------------------- TEST-CASE -----------------


// invoke
external(data);

;//--------------------- RESULT ------------------

[
  "I love java you love java ma"
]

;//------------------- TEST-CASE -----------------


// invoke
data -> transform { result: external($)};

;//--------------------- RESULT ------------------

[
  {
    "result": []
  },
  {
    "result": [
      "you love java ma"
    ]
  }
]

;//------------------- TEST-CASE -----------------





;//------------------- TEST-DONE -----------------
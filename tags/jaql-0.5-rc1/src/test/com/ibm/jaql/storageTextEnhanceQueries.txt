//1. exercise JsonToXML error condition
//1.1 standard usage
{content: {city: "Beijing", no: [1.23,2.34,30.784]}} -> jsonToXml();
{content: {city: "BeiJing", city2: "Shanghai"}} -> jsonToXml(); 
//1.2 Input is not a json type
["Beijing"] -> jsonToXml(); 
["Beijing", "Shanghai"] -> jsonToXml(); 
[{content: "Customer Information"}] -> jsonToXml(); 
{content: "Customer Information" -> jsonToXml(); 
{"content", "Customer Information"} -> jsonToXml(); 
{content: "Customer Information"} -> jsonToXml(123); 
//1.3 Json value is an array, but not a json record
{content: ["BeiJing", "Shanghai"]} -> jsonToXml();
{content: [{city: "BeiJing", city2: "Shanghai"}]} -> jsonToXml();  
{content: [{city: "BeiJing"}, {city2: "Shanghai"}]} -> jsonToXml(); 
//json record size is greater than 1
{content: "Customer Information", content2: "Product Information"} -> jsonToXml(); 
//1.4 nested jason
{content: {city: "BeiJing", city2: "Shanghai", content2:{name:"IBM Computer", price: 40}}} -> jsonToXml(); 
{content: {city: "BeiJing", city2: "Shanghai", price:[10.0,1220,0.307]}} -> jsonToXml();
{content: {city: "BeiJing", city2: "Shanghai", content2:[{name:"IBM Computer"}, {price: 40}]}} -> jsonToXml(); 

2. exercise JsonToDel error condition
//2.1 standard usage
["Computer"] -> jsonToDel(); 
[[1.23, 'one','two'],[100, 'three','four']] -> jsonToDel();
[[1.23, 'one','two'],[100, 'three','four']] -> jsonToDel({quoted: false});
[[1.23, 'one','two'],[100, 'three','four']] -> jsonToDel({quoted: true});
[[1.23, 'one','two'],[100, 'three','four']] -> jsonToDel({escape: false});
[[1.23, 'one','two'],[100, 'three','four']] -> jsonToDel({escape: true});
//2.2 Input is not an array
"Computer" -> jsonToDel(); 
{name: "Computer"} -> jsonToDel(); 
{content: {city: "BeiJing", city2: "Shanghai"}} -> jsonToDel(); 
//2.3 input is composition of json, array and atoms
[{name: 'mike', age: 10}, [100, 200], "China", 12] -> jsonToDel({schema: schema { name, age }});
//2.4 exercise schema
[{sn: "one"}, {sn: "two"}] -> jsonToDel({schema: schema {sn}});
[{sn: "one"}, {sn2: "two"}] -> jsonToDel({schema: schema {sn}});
//it hang, refer to defect 9339
//[{sn: "one"}, {sn2: "two",sn: "thress}] -> jsonToDel({schema: schema {sn}});
[{sn: "one"}, {sn2: "two",sn: "thress"}] -> jsonToDel({schema: schema {sn}});
[{sn: "one"}, {sn2: "two",sn: "thress"}] -> jsonToDel({schema: schema {sn2}});
[{name: 'mike', age: 10}, {sn2: "two",sn: "thress"}, [100, 200], "China", 12] -> jsonToDel({schema: schema { name, age }});
[{name: 'mike', age: 10}, ['Jack', 200]] -> jsonToDel({schema: schema { name, age }});
[{name: 'mike', age: 10}, ['Jack', 200, "IBM"]] -> jsonToDel({schema: schema { name, age }});
[{name: 'mike', age: 10, address: "Beijing"}, ['Jack', 200, "IBM"]] -> jsonToDel({schema: schema { name, age }});

//3. Exercise Internationalization
//3.1 exercise conversion for Chinese characters
convert(["a中国","b美国","1"], schema [ string, string,long ]);
//3.2 exercise lines() and del() interface for Chinese characters
$out = "tmpout/chinese-file.txt";
[1,2,3.4,4,true,6,'2012年a世b界c杯d冠e军f是g那h个i国j家k',8,'Rose',0.78] -> write(lines($out));
[1,2,3.4,4,true,6,'2012年世界杯冠军是那个国家',8,'Rose',0.78] -> write(lines($out));
read(lines($out));
["冰箱,中国产,1", "跑车, 德国造,2"] -> write(lines($out));
read(lines($out));
read(del($out, { schema: schema [ string, string, long], quoted: false}));
//3.3 exercise jsonToDel for Chinese characters
[['篮球','足球', 12.8],['跳水', '游泳', 34.9]] -> jsonToDel({quoted: false});
//comment out this case temporally as it outputs differnet results on sun and ibm jdk
//[['篮球','足球', 12.8],['跳水', '游泳', 34.9]] -> jsonToDel({quoted: true});
[['篮球','足球', 12.8],['跳水', '游泳', 34.9]] -> jsonToDel({quoted: false, schema: schema {sn}});
[{name: '诸葛亮', age: 50}, {name: '刘备', age: 40}] -> jsonToDel({schema: schema { name, age }});
//comment out this case temporally as it outputs differnet results on sun and ibm jdk
//[{name: '诸葛亮', age: 50}, {name: '刘备', age: 40}, 100, '唐僧', ['西游记', '红楼梦', '三国演义']] -> jsonToDel({schema: schema { name, age }, delimiter: ':'});